version: "3.9"

services:
  # Banco de dados para os usuários
  db-users:
    image: postgres:14
    container_name: ecommerce-db-users
    environment:
      POSTGRES_USER: ecommerce_users
      POSTGRES_PASSWORD: my_password_users
      POSTGRES_DB: ecommerce_users
    # Porta opcional — expor apenas se necessário
    # ports:
    #   - "5431:5432"
    networks:
      - ecommerce-net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "ecommerce_users"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Banco de dados para os produtos
  db-products:
    image: postgres:14
    container_name: ecommerce-db-products
    environment:
      POSTGRES_USER: ecommerce_products
      POSTGRES_PASSWORD: my_password_products
      POSTGRES_DB: ecommerce_products
    # Alterado para evitar conflito com PostgreSQL local
    # ports:
    #   - "5434:5432"
    networks:
      - ecommerce-net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "ecommerce_products"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Banco de dados para os pedidos
  db-orders:
    image: postgres:14
    container_name: ecommerce-db-orders
    environment:
      POSTGRES_USER: ecommerce_orders
      POSTGRES_PASSWORD: my_password_orders
      POSTGRES_DB: ecommerce_orders
    # ports:
    #   - "5433:5432"
    networks:
      - ecommerce-net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "ecommerce_orders"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Inicialização dos bancos (criação de tabelas e seed)
  db-init:
    build:
      context: .
      dockerfile: services/db-init/Dockerfile
    depends_on:
      - db-users
      - db-products
      - db-orders
    networks:
      - ecommerce-net

  # Serviço de usuários
  users:
    build:
      context: .
      dockerfile: services/users/Dockerfile
    depends_on:
      db-init:
        condition: service_completed_successfully
    ports:
      - "8001:8001"
    environment:
      DATABASE_URL: "postgresql+psycopg2://ecommerce_users:my_password_users@ecommerce-db-users:5432/ecommerce_users"
    networks:
      - ecommerce-net

  # Serviço de produtos
  products:
    build:
      context: .
      dockerfile: services/products/Dockerfile
    depends_on:
      db-init:
        condition: service_completed_successfully
    ports:
      - "8002:8002"
    environment:
      DATABASE_URL: "postgresql+psycopg2://ecommerce_products:my_password_products@ecommerce-db-products:5432/ecommerce_products"
    networks:
      - ecommerce-net

  # Serviço de pedidos
  orders:
    build:
      context: .
      dockerfile: services/orders/Dockerfile
    depends_on:
      db-init:
        condition: service_completed_successfully
    ports:
      - "8003:8003"
    environment:
      DATABASE_URL: "postgresql+psycopg2://ecommerce_orders:my_password_orders@ecommerce-db-orders:5432/ecommerce_orders"
    networks:
      - ecommerce-net
  locust:
    build:
      context: ./stress_tests
    depends_on:
      - users
      - products
      - orders
    ports:
      - "8089:8089"  # Interface web
    networks:
      - ecommerce-net

networks:
  ecommerce-net:
    driver: bridge
    